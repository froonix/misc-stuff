#!/bin/bash
export LC_ALL=C
cd ~/android/lineage || exit $?

if [[ -z "${3:-}" ]]
then
	repo init -b "${2:-lineage-16.0}" || exit $?
	repo sync -j "$(nproc)" --force-sync || exit $?
fi

source build/envsetup.sh

export FROONIX_PRIV_BUILD=false
export LINEAGE_BUILDTYPE="EXPERIMENTAL"
export LINEAGE_EXTRAVERSION=""

#export FROONIX_PRIV_BUILD=true
#export FROONIX_PRIV_BUILD_ID="FROONIX"
#export LINEAGE_BUILDTYPE="RELEASE"
#
### OPTIONAL: Required for OTA & recovery!
##rm -rf vendor/froonix-secret-certs || exit $?
##cp -avf ~/.android-certs vendor/froonix-secret-certs || exit $?
##export FROONIX_CERTIFICATE=vendor/froonix-secret-certs/releasekey

function dumpvar()
{
	./build/soong/soong_ui.bash --dumpvar-mode "$1"
}

breakfast "${1:-crackling}" || exit $?
fullversion=$(dumpvar LINEAGE_VERSION)
overrides=$(dumpvar PRODUCT_PROPERTY_OVERRIDES)
displayversion=$(dumpvar LINEAGE_DISPLAY_VERSION)
version=$(dumpvar PRODUCT_VERSION_MAJOR).$(dumpvar PRODUCT_VERSION_MINOR)
buildtype=$(dumpvar LINEAGE_BUILDTYPE | tr '[:upper:]' '[:lower:]')
directory=lineage-$(sed -r 's/-([A-Z-]+)-/-/' <<< "$fullversion")
filename="lineage-$fullversion-signed.zip"
timestamp=$(cat ./out/build_date.txt)

if [[ -z "$fullversion" || -z "$displayversion" || "$version" == "." || -z "$buildtype" || -z "$timestamp" ]]
then
	echo "ERROR! Got invalid response from soong_ui..." 1>&2
	exit 1
fi

echo
echo "============================================"
echo "OTA_VERSION                = $version ($buildtype)"
echo "OTA_DIRECTORY              = $directory"
echo "LINEAGE_DISPLAY_VERSION    = $displayversion"
echo "SIGNED_FILENAME            = $filename"
echo "PRODUCT_PROPERTY_OVERRIDES = $overrides"
echo "============================================"
echo

rm -fv "$OUT/obj/PACKAGING/target_files_intermediates"/*-target_files-*.zip

mka target-files-package otatools \
 && ./build/tools/releasetools/sign_target_files_apks -o -d ~/.android-certs "$OUT/obj/PACKAGING/target_files_intermediates"/*-target_files-*.zip "$OUT/signed-target_files.zip" \
 && ./build/tools/releasetools/ota_from_target_files -k ~/.android-certs/releasekey --block --backup=true "$OUT/signed-target_files.zip" "$OUT/$filename" \
 || exit $?

cd "$OUT" || exit $?
for algo in md5 sha256 sha512
do
	"${algo}sum" "$filename" > "$filename.${algo}sum" || exit $?
done

echo
echo "============================================"
echo "Filename: $filename"
echo "Destination: $version/$directory"
echo
echo "JSON item for updater:"
echo
echo "        {"
echo "            \"size\":     $(stat --printf="%s" "$filename"),"
echo "            \"datetime\": $timestamp,"
echo "            \"id\":       \"$(cut -d ' ' -f 1 < "$filename.md5sum")\","
echo "            \"filename\": \"$filename\","
echo "            \"url\":      \"https://example.net/ota/$version/$directory/$filename\","
echo "            \"romtype\":  \"$buildtype\","
echo "            \"version\":  \"$version\""
echo "        },"
echo "============================================"
echo
